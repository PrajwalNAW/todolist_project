name: Django CI

on:
  push:
    branches:
      - main  # Runs the workflow when changes are pushed to the `main` branch
  pull_request:
    branches:
      - main  # Runs the workflow on pull requests targeting `main`

jobs:
  test-lint:
    name: Run Tests and Lint Code
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U django -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set Up Database
      env:
        DATABASE_URL: postgres://django:password@localhost:5432/test_db
      run: |
        python manage.py migrate

    - name: Run Tests
      env:
        DATABASE_URL: postgres://django:password@localhost:5432/test_db
      run: |
        coverage run manage.py test
        coverage report
        coverage html

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-html
        path: htmlcov

    - name: Run Linter (Flake8)
      run: |
        flake8 .

    - name: Run Formatter Check (Black)
      run: |
        black --check .

  e2e-tests:
    name: Run End-to-End Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt selenium pytest pytest-django

    - name: Run E2E Tests
      run: |
        pytest --tb=short e2e_tests/
